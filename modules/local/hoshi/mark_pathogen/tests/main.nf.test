nextflow_process {

    name "Test Process EMU_MARK_PATHOGEN"
    script "../main.nf"
    process "EMU_MARK_PATHOGEN"
    tag "emu"
    tag "mark_pathogen"
    tag "modules"

    test("mark-pathogen-basic") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [
                    [ id: 'test' ],
                    file('data/test_rel-abundance.tsv', checkIfExists: true)
                ]
                """
            }
        }

        then {
            def reportTuple = process.out.report[0]
            def reportFile = file(reportTuple[1])
            def expected = '''tax_id\tspecies\tgenus\testimated counts\tabundance\tknownn pathogen
562\tEscherichia coli\tEscherichia\t600.6\t0.6\t---
1234567\tTestus exampleus\tTestus\t400.4\t0.39999999999999997\t---
'''

            assertAll(
                { assert process.success },
                { assert reportTuple[0].id == 'test' },
                { assert reportFile.exists() },
                { assert reportFile.text == expected }
            )
        }
    }

    test("mark-pathogen-stub") {
        options "-stub"

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [
                    [ id: 'test' ],
                    file('data/test_rel-abundance.tsv', checkIfExists: true)
                ]
                """
            }
        }

        then {
            def reportTuple = process.out.report[0]
            def reportFile = file(reportTuple[1])

            assertAll(
                { assert process.success },
                { assert reportTuple[0].id == 'test' },
                { assert reportFile.exists() },
                { assert reportFile.text == '' }
            )
        }
    }
}
